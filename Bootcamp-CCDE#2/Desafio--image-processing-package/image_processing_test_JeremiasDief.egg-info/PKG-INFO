Metadata-Version: 2.1
Name: image-processing-test-JeremiasDief
Version: 0.0.4
Summary: Test version - Image processing. This project belongs to Karina Tiemi Kato, Tech Lead, Machine Learning Engineer, Data Scientist Specialist at Take. This package is a demo for simulation of upload on the Test Pypi website, and it's from class of the Bootcamp Cognizant #2. E-mail:karinatkato@gmail.com.
Home-page: https://github.com/JeremiasDief/Desafio - image-processing-package
Author: Jeremias Diefenthaler
Author-email: jeremias_dief@yahoo.com.br
License: UNKNOWN
Platform: UNKNOWN
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE

# Projeto: Pacote de Processamento de Imagens
## Autora do Pacote Original: Karina Kato
### Aula: Descomplicando a criaÃ§Ã£o de pacotes de processamento de imagens em Python - Digital Innovation One
### Professora: Karina Kato
#### Tecnologia: Python
#### Data: 05/04/2022
-----------------------------------------
### Objetivos do desafio:
- Aprender a criar um pacote de processamento de imagens;
- DisponibilizÃ¡-lo no repositÃ³rio PyPi (neste caso somente utilizarei o Test PyPi para fins de simulaÃ§Ã£o);
- Criar e disponibilizar o repositÃ³rio no GitHub.
-----------------------------------------
### DescriÃ§Ã£o
O pacote "image_processing-test-JeremiasDief" Ã© usado para:

- MÃ³dulo "Processing":
  - CorrespondÃªncia de histograma;
  - Similaridade estrutural;
  - Redimensionar imagem.

- MÃ³dulo "Utils":
  - Ler imagem;
  - Salvar imagem;
  - Plotar imagem;
  - Resultado do grÃ¡fico;
  - Plotar histograma.
---------------------------------------------
## Passo a passo da configuraÃ§Ã£o para hospedar um pacote em Python no ambiente de testes Test Pypi

- [x] InstalaÃ§Ã£o das Ãºltimas versÃµes de "setuptools" e "wheel"

```
python -m pip install --user --upgrade setuptools wheel
```
- [x] Tenha certeza que o diretÃ³rio no terminal seja o mesmo do arquivo "setup.py"

```
C:\Users\Usuario\Documents\Projetos DIO\Projetos_DIO\Bootcamp CCDE #2\Desafio - image-processing-package-JeremiasDief> python setup.py sdist bdist_wheel
```

- [x] ApÃ³s completar a instalaÃ§Ã£o, verifique se as pastas abaixo foram adicionadas ao projeto:
  - [x] build;
  - [x] dist;
  - [x] image_processing_test-JeremiasDief.egg-info.

- [x] Feito isso, basta subir os arquivos, usando o Twine, para o Test Pypi:

```
python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*
```

- [x] ApÃ³s rodar o comando acima no terminal serÃ¡ pedido para inserir o usuÃ¡rio e a senha do seu perfil no Test PyPi. Na sequÃªncia, com tudo ocorrendo de maneira correta, o projeto estarÃ¡ hospedado no Test Pypi.

### Imagem da pÃ¡gina do meu perfil no Test PyPi apÃ³s o upload do pacote
<img width="auto" src="https://github.com/JeremiasDief/Projetos_DIO/blob/main/Bootcamp%20CCDE%20%232/Desafio%20-%20image-processing-package/image-processing-test-JeremiasDief.png">

#### O objetivo deste desafio nÃ£o Ã© postar o pacote do projeto no meu perfil do PyPi, pois o mesmo pertence Ã  Karina Kato, apenas no Test PyPi para poder adquirir o aprendizado do processo.
#### O Test PyPi, como o prÃ³prio nome diz, Ã© apenas um ambiente de testes, por isso Ã© utilizado para simular o upload de um projeto no ambiente PyPi. Para que o projeto fique disponÃ­vel como um pacote pÃºblico Ã© necessÃ¡rio hospedÃ¡-lo na conta pessoal do prÃ³rpio PyPi.
----------------------------------------------------
## InstalaÃ§Ã£o local, apÃ³s hospedagem no Test Pypi

- [x] InstalaÃ§Ã£o do Pacote

Use o gerenciador de pacotes ```pip install -i https://test.pypi.org/simple/ image-processing-test-JeremiasDief``` para instalar o pacote criado. 

-------------------------------------------------
## Exemplo de como usar o pacote em qualquer projeto

```python
from image-processing-test-JeremiasDief.processing import combination

combination.find_difference(image1, image2)
```
-------------------------------------------------

## Autor (quem hospedou o projeto no Test Pypi)
Jeremias Diefenthaler, baseado na publicaÃ§Ã£o de HenriqueMAP

## LicenÃ§a
[MIT](https://choosealicense.com/licenses/mit/)


